#define ZMK_POINTING_DEFAULT_MOVE_VAL 1800  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include "keys_pl.h"

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&lt { tapping-term-ms = <140>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT>, <&kp CAPS>;

            label = "Shift + Caps";
        };

        ht_numbers_rgb: ht_numbers_rgb {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_NUMBERS_RGB";
            bindings = <&numbers_RGB>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <140>;
            flavor = "tap-preferred";
        };

        ht_func_rgb: ht_func_rgb {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_FUNC_RGB";
            bindings = <&func_RGB>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <140>;
            flavor = "tap-preferred";
        };

        td_semi: td_semi {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&sk COMMA>, <&kp SEMI>;

            label = "TD_SEMI";
        };

        htd_semi: htd_semi {
            compatible = "zmk,behavior-hold-tap";
            label = "HTD_SEMI";
            bindings = <&kp>, <&td_semi>;

            #binding-cells = <2>;
            tapping-term-ms = <140>;
            flavor = "tap-preferred";
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        Ls {
            timeout-ms = <200>;
            bindings = <&kp PL_LSTR>;
            key-positions = <8 47>;
            layers = <0>;
        };

        Es {
            timeout-ms = <200>;
            bindings = <&kp PL_EOGO>;
            key-positions = <24 47>;
            layers = <0>;
        };

        Os {
            timeout-ms = <200>;
            bindings = <&kp PL_OACU>;
            key-positions = <26 47>;
            layers = <0>;
        };

        As {
            timeout-ms = <200>;
            bindings = <&kp PL_AOGO>;
            key-positions = <14 47>;
            layers = <0>;
        };

        Ss {
            timeout-ms = <200>;
            bindings = <&kp PL_SACU>;
            key-positions = <16 47>;
            layers = <0>;
        };

        Zs {
            timeout-ms = <200>;
            bindings = <&kp PL_ZDOT>;
            key-positions = <29 47>;
            layers = <0>;
        };

        Xs {
            timeout-ms = <200>;
            bindings = <&kp PL_ZACU>;
            key-positions = <30 47>;
            layers = <0>;
        };

        Cs {
            timeout-ms = <200>;
            bindings = <&kp PL_CACU>;
            key-positions = <31 47>;
            layers = <0>;
        };

        Ns {
            timeout-ms = <200>;
            bindings = <&kp PL_NACU>;
            key-positions = <23 47>;
            layers = <0>;
        };
    };

    macros {
        numbers_RGB: numbers_RGB {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_tap>,
                <&rgb_ug RGB_COLOR_HSB(235,70,50)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 1>,
                <&macro_tap>,
                <&rgb_ug RGB_COLOR_HSB(200,70,60)>;
        };

        func_RGB: func_RGB {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 2>,
                <&macro_tap>,
                <&rgb_ug RGB_COLOR_HSB(125,70,75)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 2>,
                <&macro_tap>,
                <&rgb_ug RGB_COLOR_HSB(200,70,60)>;
        };

        gaming_RGB: gaming_RGB {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&tog 3>,
                <&macro_tap>,
                <&rgb_ug RGB_COLOR_HSB(0,100,50)>;
        };

        xlookup: xlookup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp X &kp L &kp O &kp O &kp K &kp U &kp P &kp LPAR>;
            label = "XLOOKUP";
        };

        sumifs: sumifs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp S &kp U &kp M &kp I &kp F &kp S &kp LPAR>;
            label = "SUMIFS";
        };

        left: left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp L &kp E &kp F &kp T &kp LPAR>;
            label = "LEFT";
        };

        mid: mid {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp M &kp I &kp D &kp LPAR>;
            label = "MID";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LCTRL &kp C>;
            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LCTRL &kp V>;
            label = "PASTE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "COLEMAK";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp F         &kp P                    &kp B                                          &kp UP                &kp J          &kp L           &kp U      &kp Y    &kp SEMI  &kp BSPC
&td0       &kp A  &kp R  &kp S         &kp T                    &kp G                                &kp LEFT  &kp ENTER  &kp RIGHT  &kp M          &kp N           &kp E      &kp I    &kp O     &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C         &kp D                    &kp V                 &gaming_RGB              &kp DOWN              &kp K          &kp H           &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LEFT_ALT  &ht_numbers_rgb 0 SPACE  &ht_func_rgb 0 ENTER                                                 &kp BACKSPACE  &kp LEFT_SHIFT  &none
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_DOWN) LC(PAGE_UP)>;
        };

        lower_layer {
            display-name = "NUMBERS";
            bindings = <
&mt GRAVE ESCAPE  &kp N1         &kp N2      &kp N3            &kp N4               &kp N5                                            &mmv MOVE_UP                     &none          &none           &none    &none  &none          &none
&kp LEFT_SHIFT    &kp NUMBER_6   &kp N7      &kp N8            &mt LEFT_BRACKET N9  &mt RIGHT_BRACKET N0              &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp HOME       &kp END         &none    &none  &kp BACKSLASH  &none
&kp LEFT_CONTROL  &mt DOT COMMA  &kp DELETE  &kp BACKSPACE     &mt SLASH MINUS      &mt ASTRK EQUAL       &kp SEMI                    &mmv MOVE_DOWN                   &kp INSERT     &none           &none    &none  &none          &none
                                             &kp LEFT_COMMAND  &trans               &trans                                                                             &kp BACKSPACE  &kp LEFT_SHIFT  &kp RET
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        raise_layer {
            display-name = "FCONFIG";
            bindings = <
&kp ESCAPE        &mt LG(NUMBER_1) F1  &mt LG(NUMBER_2) F2  &mt LG(NUMBER_3) F3  &mt LG(NUMBER_4) F4  &mt LG(NUMBER_5) F5                           &kp K_SCROLL_UP           &none         &left         &mid             &none  &none           &none
&kp LEFT_SHIFT    &kp F6               &kp F7               &kp F8               &kp F9               &kp F10                                &none  &mkp LCLK          &none  &none         &xlookup      &none            &none  &none           &none
&sk LEFT_CONTROL  &copy                &paste               &kp LS(LG(S))        &kp F11              &kp F12              &bt BT_CLR_ALL           &kp K_SCROLL_DOWN         &out OUT_TOG  &sumifs       &none            &none  &kp SCROLLLOCK  &kp C_PAUSE
                                                            &bt BT_SEL 0         &bt BT_SEL 1         &none                                                                   &bt BT_SEL 2  &out OUT_TOG  &rgb_ug RGB_TOG
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "GAMING";
            bindings = <
&trans          &trans  &trans  &trans        &trans     &trans                             &kp UP_ARROW                     &trans  &trans           &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &trans  &trans  &trans        &trans     &trans             &kp LEFT_ARROW  &kp SPACE       &kp RIGHT_ARROW  &trans  &trans           &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans        &trans     &trans   &tog 3                    &kp DOWN_ARROW                   &trans  &trans           &trans  &trans  &trans  &kp ESC
                                &kp LEFT_ALT  &kp SPACE  &kp RET                                                             &trans  &kp RIGHT_SHIFT  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };
};
